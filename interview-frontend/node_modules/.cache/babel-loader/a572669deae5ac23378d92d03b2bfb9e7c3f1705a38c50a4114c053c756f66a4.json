{"ast":null,"code":"var _jsxFileName = \"/Users/likhithrajup/Developer/think41/interview-backend/interview-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const fetchCustomers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/customers\");\n      setCustomers(response.data);\n      setFiltered(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch customers:\", error.message);\n    }\n  };\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  useEffect(() => {\n    const term = searchTerm.toLowerCase();\n    const results = customers.filter(customer => customer.name.toLowerCase().includes(term) || customer.email.toLowerCase().includes(term));\n    setFiltered(results);\n  }, [searchTerm, customers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer Directory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by name or email...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customer-grid\",\n      children: filtered.length > 0 ? filtered.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: customer.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", customer.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Orders: \", customer.orderCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, customer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No customers found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PBxcjvjCwztb0tOqUlxn15+vEko=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","customers","setCustomers","filtered","setFiltered","searchTerm","setSearchTerm","fetchCustomers","response","get","data","error","console","message","term","toLowerCase","results","filter","customer","name","includes","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","orderCount","id","_c","$RefreshReg$"],"sources":["/Users/likhithrajup/Developer/think41/interview-backend/interview-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [customers, setCustomers] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const fetchCustomers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/customers\");\n      setCustomers(response.data);\n      setFiltered(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch customers:\", error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n\n  useEffect(() => {\n    const term = searchTerm.toLowerCase();\n    const results = customers.filter((customer) =>\n      customer.name.toLowerCase().includes(term) ||\n      customer.email.toLowerCase().includes(term)\n    );\n    setFiltered(results);\n  }, [searchTerm, customers]);\n\n  return (\n    <div className=\"App\">\n      <h1>Customer Directory</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search by name or email...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        className=\"search-input\"\n      />\n\n      <div className=\"customer-grid\">\n        {filtered.length > 0 ? (\n          filtered.map((customer) => (\n            <div className=\"customer-card\" key={customer.id}>\n              <h2>{customer.name}</h2>\n              <p>Email: {customer.email}</p>\n              <p>Orders: {customer.orderCount}</p>\n            </div>\n          ))\n        ) : (\n          <p>No customers found.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}